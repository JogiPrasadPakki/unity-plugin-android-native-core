/*This Script is generated by Jogi Prasad Pakki
No one allowed to use or modify this script.
If you any questions mail me to jogiprasadpakki@gmail.com 
Copy right 2018 All reserved by Jogi Prasad Pakki */

using System;
using UnityEngine;

namespace AndroidNativeCore
{
    public class Pickers {

        public delegate void onDateSet(int year,int mounth,int day);
        public delegate void onTimeSet(int hour, int minuit);
        public delegate void onImageSelectHandler(string imagePath);
        public delegate void onCanselHandler();

        private static event onDateSet onDateSetHandler;
        private static event onTimeSet onTimeSetHandler; 

        public void pickImageFromCamera(onImageSelectHandler onImageSelected,onCanselHandler onCansel) {
            GameObject eventListner;
            if(GameObject.Find("AndroidNativeCore") == null)
            {
                eventListner = new GameObject("AndroidNativeCore");
                androidEventHandler e = eventListner.AddComponent<androidEventHandler>();
            }
            else
            {
                eventListner = GameObject.Find("AndroidNativeCore");
            }
                        
            AndroidJavaObject obj = new AndroidJavaObject(AndroidCore.PluginPackage + ".Core");
            obj.Call("openImagePicker",true);
            androidEventHandler.onImagePickHandler ev = null;
            ev = (string path) =>
            {
                if (onImageSelected != null)
                {
                    onImageSelected.Invoke(path);
                    androidEventHandler.onImagePickListner -= ev;
                   ;
                }
                UnityEngine.Object.Destroy(eventListner);
            };
            androidEventHandler.onImagePickListner += ev;

            androidEventHandler.onImageCansel can = null;
            can = () =>
            {
                if(onCansel != null)
                {
                    onCansel.Invoke();
                }
                androidEventHandler.onImageCancelledListner -= can;
                UnityEngine.Object.Destroy(eventListner);
            };
            androidEventHandler.onImageCancelledListner += can;
        }
        public void pickImageFromGallery(onImageSelectHandler onImageSelected,onCanselHandler onCansel)
        {
            GameObject eventListner;
            if (GameObject.Find("AndroidNativeCore") == null)
            {
                eventListner = new GameObject("AndroidNativeCore");
                androidEventHandler e = eventListner.AddComponent<androidEventHandler>();
            }
            else
            {
                eventListner = GameObject.Find("AndroidNativeCore");
            }

            androidEventHandler.onImageCansel can = null;
            can = () =>
            {
                if (onCansel != null)
                {
                    onCansel.Invoke();
                }
                androidEventHandler.onImageCancelledListner -= can;
                UnityEngine.Object.Destroy(eventListner);
            };
            androidEventHandler.onImageCancelledListner += can;


            AndroidJavaObject obj = new AndroidJavaObject(AndroidCore.PluginPackage + ".Core");
            obj.Call("openImagePicker",false);
            androidEventHandler.onImagePickHandler ev = null;
            ev = (string path) =>
            {
                if (onImageSelected != null)
                {
                    onImageSelected.Invoke(path);
                    androidEventHandler.onImagePickListner -= ev;
                    UnityEngine.Object.Destroy(eventListner);
                }
                    
            };
            androidEventHandler.onImagePickListner += ev;
           
        }
        public void pickDate(int year,int mounth,int day,onDateSet onDateSelect)
        {
            AndroidCore.getActivity().Call("runOnUiThread", new AndroidJavaRunnable(() =>
            {
                new AndroidJavaObject("android.app.DatePickerDialog", AndroidCore.getActivity(), new onDateSetListner(), year, mounth, day).Call("show");
            }));
            if (onDateSelect != null)
            {                
                onDateSetHandler = (int y, int m, int d) => { onDateSelect.Invoke(y, m + 1, d);
                };
            }
        }
        public void pickTime(int hour,int minuit,bool is24hours,onTimeSet onTimeSelect)
        {
            AndroidCore.getActivity().Call("runOnUiThread", new AndroidJavaRunnable(() =>
            {
                new AndroidJavaObject("android.app.TimePickerDialog", AndroidCore.getActivity(), new onTimeSetListner(), hour, minuit, is24hours).Call("show");
            }));
            if (onTimeSelect != null)
            {                
                onTimeSetHandler = (int h, int m) => {
                    onTimeSelect.Invoke(h, m);
                };
            }
        }



        private class onDateSetListner : AndroidJavaProxy
        {
            public onDateSetListner() : base("android.app.DatePickerDialog$OnDateSetListener") {}

            void onDateSet(AndroidJavaObject view, int year, int monthOfYear, int dayOfMonth)
            {
                onDateSetHandler.Invoke(year, monthOfYear, dayOfMonth);
            }
        }
        private class onTimeSetListner : AndroidJavaProxy
        {
            public onTimeSetListner() : base("android.app.TimePickerDialog$OnTimeSetListener") {}
            void onTimeSet(AndroidJavaObject view,int h,int m)
            {
                onTimeSetHandler.Invoke(h, m);
            }
        }
    }
}

